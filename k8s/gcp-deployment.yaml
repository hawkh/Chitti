apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: gcr.io/green-plasma-475110-k7/auth-service:latest
        ports:
        - containerPort: 3001
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: url
        - name: REDIS_URL
          value: redis://$(REDIS_HOST):6379
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: key
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: REDIS_HOST
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
spec:
  selector:
    app: auth-service
  ports:
  - port: 3001
    targetPort: 3001
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-service-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: file-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: file-service
  template:
    metadata:
      labels:
        app: file-service
    spec:
      containers:
      - name: file-service
        image: gcr.io/green-plasma-475110-k7/file-service:latest
        ports:
        - containerPort: 3002
        env:
        - name: GCS_BUCKET
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: GCS_BUCKET
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /var/secrets/google/key.json
        - name: RABBITMQ_URL
          value: amqp://rabbitmq:5672
        volumeMounts:
        - name: gcp-key
          mountPath: /var/secrets/google
          readOnly: true
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      volumes:
      - name: gcp-key
        secret:
          secretName: gcp-secret
---
apiVersion: v1
kind: Service
metadata:
  name: file-service
spec:
  selector:
    app: file-service
  ports:
  - port: 3002
    targetPort: 3002
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: detection-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: detection-service
  template:
    metadata:
      labels:
        app: detection-service
    spec:
      containers:
      - name: detection-service
        image: gcr.io/green-plasma-475110-k7/detection-service:latest
        ports:
        - containerPort: 5000
        env:
        - name: RABBITMQ_URL
          value: amqp://rabbitmq:5672
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
---
apiVersion: v1
kind: Service
metadata:
  name: detection-service
spec:
  selector:
    app: detection-service
  ports:
  - port: 5000
    targetPort: 5000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        ports:
        - containerPort: 5672
        - containerPort: 15672
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: admin
        - name: RABBITMQ_DEFAULT_PASS
          value: admin
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
spec:
  selector:
    app: rabbitmq
  ports:
  - name: amqp
    port: 5672
    targetPort: 5672
  - name: management
    port: 15672
    targetPort: 15672
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
spec:
  selector:
    app: nginx
  ports:
  - port: 80
    targetPort: 80
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {
        worker_connections 4096;
    }
    http {
        upstream auth_service {
            server auth-service:3001;
        }
        upstream file_service {
            server file-service:3002;
        }
        upstream detection_service {
            server detection-service:5000;
        }
        server {
            listen 80;
            location /api/auth/ {
                proxy_pass http://auth_service/;
            }
            location /api/files/ {
                proxy_pass http://file_service/;
            }
            location /api/detect/ {
                proxy_pass http://detection_service/;
            }
            location /health {
                return 200 "healthy\n";
            }
        }
    }
